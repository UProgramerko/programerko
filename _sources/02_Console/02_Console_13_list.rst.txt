Liste
=====

Do sada smo spomenuli n-torke i opseg kao vrste kolekcije, a vidjeli smo da se string može koristiti i kao kolekcija. Još jedna vrlo važna i često korištena vrsta kolekcije su liste.

Liste i n-torke
---------------

Liste, kao i n-torke, mogu se odrediti nabrajanjem elemenata, osim što su elementi liste napisani između uglatih zagrada:

.. activecode:: console__collections_list1

    for x in [2, 5, 8, 3]:
        print(x)
        
Liste su po mnogo čemu slične n-torkama. Sve što smo od osobina n-torki spomenuli u poglavlju o kolekcijama, vrijedi i za liste:

- Lista se također može staviti u varijablu i obrnuto - elementi lista mogu se dodijeliti odgovarajućem broju varijabli (drugim riječima, lista se može pakirati i raspakirati)
- elementima liste može se pristupiti korištenjem imena liste i rednog broja (indeksa) elementa napisanog u uglatim zagradama
- dužina liste se dobiva funkcijom *len*

.. activecode:: console__collections_list2

    names = ["Tom", "Polly", "Filip", "Mary"]
    t, p, f, m = names
    print("p =", p)
    print("names[0] =", names[0])
    print("len(names) =", len(names))

Liste imaju i neke osobine koje ih razlikuju od n-torki. Na primjer, liste se mogu produžavati pomoću funkcije  *append*:
    
.. activecode:: console__collections_list_append

    a = []
    a.append(3)
    a.append(7)
    a.append(2)
    
    for x in a:
        print(x)
    
Također, elementi liste mogu se mijenjati svoje vrijednosti i mogu se izbaciti iz liste:

.. activecode:: console__collections_list_mutable

    a = [3, 7, 2]
    print("Početna lista:")
    for x in a:
        print(x)
        
    a[0] = 5
    print("Izmjenjena lista:")
    for x in a:
        print(x)

    del a[1]
    print("Skraćena lista:")
    for x in a:
        print(x)

Ovakve operacije s n-torkama nisu moguće. Jednom napravljena n-torka ostaje takva kakva jest. N-torka kao vrijednost ne može se modificirati - ne može mijenjati svoju dužinu niti vrijednosti pojedinih elemenata. Varijabla koja sadrži n-torku može samo dobiti cijelu novu n-torku kao vrijednost, ali time prethodna n-torka nije modificirana, nego je prestala postojati. Zato se kaže da su n-torke nepromjenjive.

N-torke se mogu koristiti za skupljanje podataka koje ne namjeravamo mijenjati tijekom izvođenja programa (iako ih možemo ručno promijeniti prije izvršenja programa). Korištenjem n-torki osiguravamo da se podaci neće slučajno promijeniti, a program će s podešavanjem podešavati nešto učinkovitije nego što bi to učinio sa listom.

N-torka *t* se može pretvoriti u listu *a* tijekom izvođenja programa, i obrnuto: ``a = list(t)`` ili ``t = tuple(a)``, ), ali su takve pretvorbe rijetko potrebne i bolje ih je izbjeći (ako se često primjenjuju na velike kolekcije, konverzije poput ove mogu značajno usporiti program).

Izrada liste
------------

Kao što smo već vidjeli, postupno možemo izraditi liste u programu. Na primjer, ako je data n-torka brojeva iz koje želimo u listu prebaciti one koji su veći od nule (da bismo s njima nastavili računati), to možemo uraditi ovako:

.. activecode:: console__collections_list_create

    numbers  = (2, 5, -2, 1, -3, 4, -7, 3)
    positive_numbers = []
    for x in numbers:
        if x > 0:
            positive_numbers.append(x)
            
    for x in positive_numbers:
        print(x)

Na početku imamo prazanu lsitu, a zatim u petlji koristimo funkciju *append* kako bismo listi dodali elemente koje želimo.


Učitavanje liste
----------------

Na isti način možemo učitati podatke u listu:

.. activecode:: console__collections_list_read1

    a = []
    n = int(input("Koliko elemenata treba učitati: "))
    for i in range(n):
        x = float(input("Unesite element: "))
        a.append(x)

    print("Elementi liste su:")
    for x in a:
        print(x)


Drugi način za učitavanje liste je prvo formirati listu potrebne dužine, a zatim dodijeliti učitane vrijednosti izravno elementima liste u petlji.

.. activecode:: console__collections_list_read2

    n = int(input("Koliko elemenata treba učitati: "))
    a = [0] * n
    for i in range(n):
        a[i] = float(input("Unesite element: "))

    print("Elementi liste su:")
    for x in a:
        print(x)

Koristili smo naredbu ``a = [0] * n`` kojom se formira lista od *n* elemenata. Operacija ``[0] * n`` se naziva umnožavanje liste. Rezultat umnožavanja liste je *n* ponavljanja zadane liste. Na primjer, [0] * 5 je lista [0, 0, 0, 0, 0], a [2, 7] * 3 je lista [2, 7, 2, 7, 2, 7].

Ako korisnik unese sve elemente liste u jedan redak razdvojen razmacima, pišemo program ovako:

.. activecode:: console__collections_list_read_line

    a_str = input("Unesite sve elemente: ")
    a = []
    for s in a_str.split():
        a.append(float(s))

    print("Elementi liste su:")
    for x in a:
        print(x)

Koristili smo funkciju *split()* za raščlanjivanje unesenog teksta u kraće stringove koji sadrže pojedinačne brojeve.


.. infonote::

    **Funkcija** *split()* :
    
    Parametar funkcije *split()* function parameter je znak ili tekst koji želimo koristiti kao razdvajač. Ako ne navedemo razdvajač, razmak se podrazumijeva.
    
    :code:`"1234 56".split() -> ["1234", "56"]`
    
    :code:`"1234,56".split(',') -> ["1234", "56"]`
    
    Rezultat funkcije *split()* je lista stringova. Broj kraćih stringova koje dobijemo kao rezultat ovisi o broju i rasporedu znakova za razdvajanje u početnom stringu. Na primjer, ako tekst sadrži samo jedan znak za razdvajanje r negdje u sredini, dobit ćemo dva kraća stringa. Svaki novi znak za razdvajanje može proizvesti string više u rezultatu (ako zaista odvaja neki dio početnog stringa od ostatka teksta).
    
    :code:`"1;23;456;7".split(';') -> ["1", "23", "456", "7"]`
    
    :code:`" 1  234    56 7 ".split() -> ["1", "234", "56", "7"]`
    

Primjeri i zadaci
'''''''''''''''''

.. questionnote::

    **Primjer - prodaja**
    
    Na početku skripte, date su vrijednosti nekoliko prodaja u jednoj trgovini. Izdvojite u listu prodaje vrijednosti veće od 1000 a manje ili jednake 4000, a zatim ih ispisati.

.. activecode:: console__collections_list_sales

    sales = (241, 5372, 1278, 9335, 2438, 127, 529, 6027)
    lower_bound = 1000
    upper_bound = 4000
    # dovršite program

Zadatak rješavamo ovako:

.. activecode:: console__collections_list_sales_sol

    sales = (241, 5372, 1278, 9335, 2438, 127, 529, 6027)
    lower_bound = 1000
    upper_bound = 4000

    requested_sales = []
    for value in sales:
        if value > lower_bound and value <= upper_bound:
            requested_sales.append(value)

    print('Tražene prodaje:')
    for value in requested_sales:
        print(value)


.. questionnote::

    **Primjer - nagle promjene**
    
    Daje se n-torka brojeva. Izdvojiti u listu brojeve koji se od svojih prethodnika razlikuju bar za 10, a zatim ih ispisati.

.. activecode:: console__collections_list_increasing

    numbers = (5, 7, 9, 11, 22, 18, 15, 13, 36, 31, 27, 14, 13, 20)
    # dovrsite program

Jedno moguće rješenje je:

.. activecode:: console__collections_list_increasing_sol

    numbers = (5, 7, 9, 11, 22, 18, 15, 13, 36, 31, 27, 14, 13, 20)
    leap_changes = []
    
    for i in range(1, len(numbers)):
        if abs(numbers[i] - numbers[i-1]) >= 10:
            leap_changes.append(numbers[i])

    print('Nagle promjene:')
    for x in leap_changes:
        print(x)





.. questionnote::

    **Zadatak - parni brojevi**
    
    Daje se n-torka brojeva. Izdvojiti u listu brojeve koji su parni, a zatim ih ispisati.
    
    Podsjetimo se, broj *x* je paran ako je :math:`x \% 2 == 0`

.. activecode:: console__collections_list_even

    a = (35, 12, 32, 17, 64, 98, 77, 46, 9)
    even = []
    
.. commented out

    for x in a:
        if x % 2 == 0:
            even.append(x)

    print('Parni brojevi:')
    for x in even:
        print(x)




.. questionnote::

    **Zadatak - svaka treća riječ**
    
    Daje se n-torka stringova. Izdvojite u listu stringova **čiji su indeksi** djeljivi s 3, a zatim ih ispišite.
    
.. activecode:: console__collections_list_every_third

    words = ('All', 'the', 'other', 'words', 'and', 'phrases', 'are', 'not', 'so', 'important')
    every_third = []
    
.. commented out

    for i in range(len(words)):
        if i % 3 == 0:
            every_third.append(words[i])

    print('Svaka treća riječ:')
    for rec in every_third:
        print(rec)




.. questionnote::

    **Zadatak - ispod nule**
    
    Daje se n-torka brojeva. Izdvojite u listu brojeva koji su negativni, a njihovi predhodnici pozitivni, a zatim ispišite izdvojene brojeve.
    
.. activecode:: console__collections_list_neg_after_pos

    a = (1, -2, 3, 5, -4, -1, -3, 2, -7)
    extracted = []
    
.. commented out

    for i in range(1, len(a)):
        if a[i] < 0 and a[i - 1] > 0:
            extracted.append(a[i])

    for x in extracted:
        print(x)
