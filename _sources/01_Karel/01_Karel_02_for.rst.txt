Skratite pisanje programa
=========================

U prethodnom poglavlju je bilo zadataka u kojima bi bilo prikladno da imamo kraći način zapisa radnji koje se ponavljaju. Na primjer, bilo je potrebno da Karel krene tri koraka naprijed. U slučaju samo tri koraka, nije problem napisati tri puta naredbu naprijed(), ali kad Karel treba napraviti, recimo, dvanaest koraka naprijed, ako napišemo:

.. activecode:: Karel_for_12_steps_manual
   :passivecode: true
   
   move(); move(); move(); move(); move()
   move(); move(); move(); move(); move()
   move(); move()

u takvom načinu pisanja lakše se pogriješi, a nije ni dovoljno pregledno. Ako vam izgleda da ni dvanaest nije neki problem, pomislite da u svijetu programiranja nije neuobičajno da se neka naredba ponavlja i po milijun puta.

Naredba *For* 
-------------

Bolji način za određivanje takvog manevara bilo bi reći „dvanaest puta idi naprijed“. Da ponovimo izjavu (ili grupu izjava) određeni broj puta, koristimo naredbu ``for``. Oblik ove izjave u Pythonu koji se najčešće koristi izgleda ovako:

.. activecode:: Karel_for_syntax
   :passivecode: true
   
   for i in range(n):
       naredba_1
       ...
       naredba_k

Kasnije ćemo se upoznati s još nekim oblicima naredbe ``for``. 

Koristeći ``for`` naredbu, naš primjer s dvanaest ponavljanja koraka naprijed može se napisati ovako:
      
.. activecode:: Karel_for_12_steps_loop
   :passivecode: true
   
   for i in range(12):
       move()


Ovdje dajemo malo detaljniji opis ``for`` naredbe. Trenutno to ne morate u potpunosti razumjeti - upotreba i pravila pisanja postat će jasnija sljedećim primjerima. Ako kasnije trebate više pojedinosti o ``for`` naredbi, možete se vratiti ovom objašnjenju (ali budite svjesni da ne opisuje druge oblike *for* naredbe).

.. infonote::

   Prema pravilima pisanja programa na Pythonu, riječi  ``for`` and ``in``, kao i dvotočka (znak ``:``) na kraju retka, svi su obavezni dijelovi *for* naredbe.
   
   - Slovo ``i`` ovdje služi kao naziv mjesta na kojem držimo broj ponavljanja. Umjesto ``i``, za to se može upotrijebiti drugo ime (na to ćemo se detaljnije vratiti kad nam zatreba). 
   
   - ``range(n)`` predstavlja opseg cijelih brojeva počevši od 0, a ``n`` govori koliko brojeva sadrži taj opseg. Na primjer, ``range(3)`` je opseg koji sadrži brojeve :code:`0, 1, 2`, a ``range(7)`` je opseg sa brojevima :code:`0, 1, 2, 3 , 4, 5, 6`.

   - Naredbe u sljedećim redovima čine takozvano **tijelo for naredbe**. To mogu biti bilo koje izjave u Pythonu, uključujući naredbe za kretanje Karela, druge ``for`` naredbe, ili neke naredbe koje još nismo spomenuli. Može ih biti jedna ili više.

   Naredba ``for i in range (3)`` bi se trebala čitati: "za *i* u opsegu [0, 1, 2]". To znači da će se naredbe u tijelu for naredbe izvršavati po jedanom za i=0, i=1, i=2, dakle ukupno tri puta. Mi u tijelu for naredbe za sada nećemo koristiti vrijednost *i*, tako da samo moramo znati kolika je vrijednost u opsegu (broj iza ``range`` u zagradi), jer će se tijelo for naredbe toliko puta izvršiti.
   
   Da bi bilo jasno koje naredbe čine tijelo *for* naredbe, te naredbe se pišu uvučeno (pomaknute u desno), sve za isti broj razmaka. Možemo sami odabrati koliko razmaka koristimo za uvlačenje naredbi u tijelu *for* naredbe. Bilo bi dobro da to uvijek bude isti broj, jer ćemo se na taj način naviknuti na određeni izgled programa i lakše ga čitati. Najčešće je to 4 razmaka, pa ćemo i mi uvlačiti tijelo *for* naredbe za četiri mjesta .
   
*For* naredba se često zove inaredba ponavljanja. Također je poznata i kao petlja (engl. loop), jer kretanjem u programu po naredbama koje izvršavamo, kada dođemo do *for* naredbe, kružimo određeni broj puta po naredbama u njenom tijelu, to pravimo petlju. Izraz "petlja" ili "naredba ponavljanja" su manje precizniji, jer kao što ćemo uskoro vidjeti, naredba for nije jedina petlja. Riječ "petlja" se obično koristi kada je jasno (ili nebitno) o kojoj naredbi govorimo, jer je lakše reći na primjer „tijelo petlje”, nego „tijelo for naredbe”..

Zadaci za vježbu
------------------

Pomakni se petnaest polja naprijed i pokupi lopticu
'''''''''''''''''''''''''''''''''''''''''''''''''''

.. questionnote::

   Napišite program na osnovu koje će se Karel pomaknuti na polje (16, 1) i pokupiti lopticu.

U prostoru za rješavanje vas čeka duži (i ružniji) program. Pokušajte ga zamijeniti *for* naredbom. U slučaju da vaše rješenje s *for* naredbom ne radi (što se četo događa na početku), riješenje možete vidjeti klikom na gumb "Riješenje" ispod.

.. karel:: Karel_for_15_steps_and_take
   :blockly:

   {
      setup:function() {
          var world = new World(16, 1);
          world.setRobotStartAvenue(1);
          world.setRobotStartStreet(1);
          world.setRobotStartDirection("E");
          world.putBall(16, 1);
      
         var robot = new Robot();
      
         var code = ["from karel import *",
                     "move(); move(); move(); move(); move()",
                     "move(); move(); move(); move(); move()",
                     "move(); move(); move(); move(); move()",
                     "pick_ball()"];
                  
         return {robot:robot, world:world, code:code};
      },
      
      isSuccess: function(robot, world) {
         return robot.getBalls() === 1;
      }
   }

.. reveal:: Karel_for_15_steps_and_take_reveal
   :showtitle: Rješenje
   :hidetitle: Sakrij rješenje
   .. activecode:: Karel_for_15_steps_and_take_solution
      :passivecode: true
      
      from karel import *
      for i in range(15):
          move()
      pick_ball()

Idi jedno polje naprijed i pokupi 10 loptica
''''''''''''''''''''''''''''''''''''''''''''

.. questionnote::

  Ispred Karela nalazi se jedno polje, a na njemu je 14 loptica. Karel treba pokupiti točno deset loptica. 
  
.. karel:: Karel_for_one_square_take_10_balls
   :blockly:

   {
        setup:function() {
           var world = new World(2, 1);
           world.setRobotStartAvenue(1);
           world.setRobotStartStreet(1);
           world.setRobotStartDirection("E");
           
           world.putBalls(2, 1, 14);

           var robot = new Robot();

           var code = ["from karel import *",
                       "move()",
                       "# dovršite program",
                       ""];
           return {robot:robot, world:world, code:code};
        },
    
        isSuccess: function(robot, world) {
           return robot.getBalls() == 10;
        },
   }
   
.. reveal:: Karel_for_one_square_take_10_balls_reveal
   :showtitle: Rješenje
   :hidetitle: Sakrij rješenje

   .. activecode:: Karel_for_one_square_take_10_balls_solution
      :passivecode: true
      
      from karel import *
      move()
      for i in range(10):
          pick_ball()


Pokupi jednu lopticu na svakom od sljedećih 8 polja
'''''''''''''''''''''''''''''''''''''''''''''''''''

.. questionnote::

  Ispred Karela je osam polja, a na svakom od njih je po jedna loptica. Karel treba pokupiti sve loptice.
  
Primijetite da u for petlji treba napraviti dvije stvari: napraviti korak naprijed i pokupiti lopticu.

.. karel:: Karel_for_EightSquaresOneBallEach_TakeAllBalls
   :blockly:

   {
        setup:function() {
           var numAvenues = 9;
           var world = new World(numAvenues, 1);
           world.setRobotStartAvenue(1);
           world.setRobotStartStreet(1);
           world.setRobotStartDirection("E");
           
         for (var k = 2; k <= numAvenues; k++)
            world.putBall(k, 1);

           var robot = new Robot();

           var code = ["from karel import *",
                       "# dovršite program",
                       ""];
           return {robot:robot, world:world, code:code};
        },
    
        isSuccess: function(robot, world) {
           return robot.getBalls() == world.getAvenues() - 1;
        },
   }
   
.. reveal:: Karel_for_EightSquaresOneBallEach_TakeAllBalls_reveal
   :showtitle: Rješenje
   :hidetitle: Sakrij rješenje

   .. activecode:: Karel_for_EightSquaresOneBallEach_TakeAllBalls_solution
      :passivecode: true
      
      from karel import *
      for i in range(8):
          move()
          pick_ball()


Pokupi po 5 loptica s naredna tri polja
'''''''''''''''''''''''''''''''''''''''

.. questionnote::

  Ispred Karela su tri polja, a na svakom od njih po pet loptica. Karel treba pokupiti sve loptice.
  
.. karel:: Karel_for_Take_5_5_5
   :blockly:

   {
        setup:function() {
           var world = new World(4, 1);
           world.setRobotStartAvenue(1);
           world.setRobotStartStreet(1);
           world.setRobotStartDirection("E");
           
           world.putBalls(2, 1, 5);
           world.putBalls(3, 1, 5);
           world.putBalls(4, 1, 5);
           
           var robot = new Robot();

           var code = ["from karel import *",
                       "# dovršite program",
                       ""];
           return {robot:robot, world:world, code:code};
        },
    
        isSuccess: function(robot, world) {
           return robot.getBalls() == 15;
        },
   }
   
.. reveal:: Karel_for_Take_5_5_5_reveal
   :showtitle: Rješenje
   :hidetitle: Sakrij rješenje
   
   .. activecode:: Karel_for_Take_5_5_5_solution
      :passivecode: true
      
      from karel import *
      move()
      for i in range(5):
          pick_ball()
      move()
      for i in range(5):
          pick_ball()
      move()
      for i in range(5):
          pick_ball()
